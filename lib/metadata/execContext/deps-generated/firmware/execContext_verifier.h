// Copyright (c) 2021-2024 Qualcomm Innovation Center, Inc. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause-Clear
#ifndef EXECCONTEXT_VERIFIER_H
#define EXECCONTEXT_VERIFIER_H

/* Generated by flatcc 0.6.1 FlatBuffers schema compiler for C by dvide.com */

#ifndef EXECCONTEXT_READER_H
#include "execContext_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int ExecContext_execContextField_verify_table(flatcc_table_verifier_descriptor_t *td);
static int ExecContext_execContext_verify_table(flatcc_table_verifier_descriptor_t *td);

static int ExecContext_execContextField_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* variableNeeded */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* variableSize */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 8, 8) /* execContextOffset */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 4, 4) /* isRequired */)) return ret;
    return flatcc_verify_ok;
}

static inline int ExecContext_execContextField_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, ExecContext_execContextField_identifier, &ExecContext_execContextField_verify_table);
}

static inline int ExecContext_execContextField_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, ExecContext_execContextField_type_identifier, &ExecContext_execContextField_verify_table);
}

static inline int ExecContext_execContextField_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &ExecContext_execContextField_verify_table);
}

static inline int ExecContext_execContextField_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &ExecContext_execContextField_verify_table);
}

static int ExecContext_execContext_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* execContextSize */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 1, 0, &ExecContext_execContextField_verify_table) /* execContextFields */)) return ret;
    return flatcc_verify_ok;
}

static inline int ExecContext_execContext_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, ExecContext_execContext_identifier, &ExecContext_execContext_verify_table);
}

static inline int ExecContext_execContext_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, ExecContext_execContext_type_identifier, &ExecContext_execContext_verify_table);
}

static inline int ExecContext_execContext_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &ExecContext_execContext_verify_table);
}

static inline int ExecContext_execContext_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &ExecContext_execContext_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* EXECCONTEXT_VERIFIER_H */
